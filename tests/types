var cur = Node<int>{value: arr[pos++]};

import * from "util"
import * as util from "util"
import format as fmt from "util"

class Node<T>{
  Node<T>? next;
  T value;
}

Node<int> makeNode(int[] arr){
  var pos = 0;
  var cur = Node<int>{value: arr[pos++]};
  var head = cur;
  while(pos < arr.size){
    cur.next = Node<int>{value: arr[pos++]};
    cur = cur.next;
  }
  return head;
}

enum Color{
  WHITE,
  BLACK
}

interface a{
  int calc();
}


int calc(int a, int b, int carry?)
{
  if(carry){
    return a + b + carry;
  }
  else{
    return a + b;
  }
}

void def(int a = 0);

calc(1,2);
calc(1,2,3);
def();
def(5);
