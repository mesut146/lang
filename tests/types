class Node<T>{
  value: T;
  next: Node<T>?;
}

func makeNode(arr: int[]): Node<int>{
  let pos = 0;
  let cur = Node<int>{value: arr[pos++]};
  let head = cur;
  while(pos < arr.size){
    cur.next = Node<int>{value: arr[pos++]};
    cur = cur.next;
  }
  return head;
}

enum Color{
  WHITE,
  BLACK;
}

interface a{
  func calc(): int;
}

func calc(a: int, b: int, carry: int?): int
{
  if(carry){
    return a + b + carry;
  }
  else{
    return a + b;
  }
}

func def(a: int = 0);

calc(1,2);
calc(1,2,3);
def();
def(5);
