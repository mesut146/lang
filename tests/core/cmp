trait PartialEq{
    func eq(PartialEq rhs): bool;
    func ne(PartialEq rhs): bool { return !eq(rhs); };
}

trait PartialOrd: PartialEq{
    func lt(PartialEq rhs): bool;
    func le(PartialEq rhs): bool;
    func gt(PartialEq rhs): bool;
    func ge(PartialEq rhs): bool;
}

trait BitAnd{
    type Output;
    func bitand(BitAnd rhs): Output;
}

trait BitOr{
    type Output;
    func bitor(BitOr rhs): Output;
}

//^
trait BitXor{
    type Output;
    func bitxor(BitXor rhs): Output;
}

//<<
trait Shl{
    type Output;
    func shl(Shl rhs): Output;
} 

//>>
trait Shr{
    type Output;
    func shr(Shr rhs): Output;
}

//<<
trait Shl{
    type Output;
    func shl(Shl rhs): Output;
}

//&=
trait BitAndAssign{
    type Output;
    func shl(Shl rhs): Output;
}


