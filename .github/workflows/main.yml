
name: test
on: [push]

env:
  last_version: '1.00'
  new_version: '1.01'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "set env"
        run: |
          echo "toolchain_dir=x-toolchain-${last_version}-$(uname -m)" >> "$GITHUB_ENV"
          echo "toolchain_arm64_dir=x-toolchain-${last_version}-aarch64" >> "$GITHUB_ENV"
          echo "tool_x86_64_zip=x-toolchain-${new_version}-x86_64.zip >> $GITHUB_ENV"
          echo "tool_arm64_zip=x-toolchain-${new_version}-aarch64.zip >> $GITHUB_ENV"

      - uses: actions/checkout@v4
      - name: "download toolchain"
        run: |
          gh auth status
          gh release download v${last_version}&&echo "download toolchain '$toolchain_dir'"
          unzip $toolchain_dir.zip
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: build-x86_64
        if: true
        run: |
          bin/build.sh $toolchain_dir $new_version

      - name: Upload Artifacts
        if: true
        uses: actions/upload-artifact@v4
        with:
          name: toolchain-x86_64
          path: tool_x86_64_zip

      - name: build-arm64
        if: true
        run: |
          unzip $toolchain_arm64_dir.zip
          ./bin/docker.sh $toolchain_dir $toolchain_arm64_dir $new_version

      - name: Upload Artifacts arm64
        if: true
        uses: actions/upload-artifact@v4
        with:
          name: toolchain-aarch64
          path: $tool_arm64_zip


      - name: Create Release
        if: ${{ false && env.new_version != env.last_version }}
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.new_version }}
          release_name: toolchain for v${{ env.new_version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        if: ${{ false && env.new_version != env.last_version }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: x-toolchain-${{ env.new_version }}-x86_64.zip
          asset_name: x-toolchain-${{ env.new_version }}-x86_64.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-arm:
    runs-on: ubuntu-24.04-arm
    needs: build
    if: false
    steps:
      - name: "set env"
        run: |
          echo "toolchain_dir=x-toolchain-${last_version}-$(uname -m)" >> "$GITHUB_ENV"
          echo "toolchain_arm64_dir=x-toolchain-${last_version}-aarch64" >> "$GITHUB_ENV"

      - uses: actions/checkout@v4
      - name: "download toolchain"
        run: |
          gh auth status
          gh release download v${last_version}&&echo "download toolchain '$toolchain_arm64_dir'"
          unzip $toolchain_arm64_dir.zip
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "build-arm64"
        run: |
          bin/build.sh $toolchain_arm64_dir $new_version
